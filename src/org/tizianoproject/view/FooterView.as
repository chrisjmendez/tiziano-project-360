package org.tizianoproject.view{	import com.chargedweb.swfsize.SWFSizeEvent;	import com.chrisaiv.utils.ShowHideManager;	import com.greensock.TweenLite;	import com.greensock.easing.Strong;		import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.StageDisplayState;	import flash.events.Event;	import flash.events.FullScreenEvent;	import flash.events.TimerEvent;	import flash.text.TextField;	import flash.utils.Timer;
		public class FooterView extends CompositeView	{		private static const DEFAULT_BG_COLOR:Number = 0x000000;		private static const DEFAULT_BG_ALPHA:Number = 0.5;				private static const DEFAULT_HEIGHT:Number = 96;		private static const MARGIN_BOTTOM:Number = 5;				private static const TWEEN_SPEED:Number = 0.7;		private static const TIMER_DURATION:Number = 200;				public var title_txt:TextField;		public var hed_txt:TextField;				private var timer:Timer;		private var bg:Sprite;		private var browserWindowWidth:Number;		private var browserWindowBottom:Number;				public function FooterView(  )		{			title_txt.text = "";			hed_txt.text = "";			hideFooter( 0 );					}		override protected function init():void		{			initTimer();			initBackground();		}				override protected function resize():void		{			var w:Number = stage.stageWidth;			var h:Number = stage.stageHeight;			trace( "FooterView::onFullScreenHandler:", w, h );						if( stage.displayState == StageDisplayState.FULL_SCREEN ){				updateYPos( stage.stageHeight - height );				updateBackground( stage.stageWidth );			} else {				updateYPos( browserWindowBottom - height );				updateBackground( browserWindowWidth );			}					}				private function initBackground():void		{			bg = new Sprite();			bg.name = "bg";			bg.mouseChildren = true;			bg.mouseEnabled = false;						bg.graphics.beginFill( DEFAULT_BG_COLOR, DEFAULT_BG_ALPHA );			bg.graphics.drawRect( 0, 0, stage.stageWidth, DEFAULT_HEIGHT );			bg.graphics.endFill();						bg.graphics.lineStyle(1, 0x666666, 1 );			bg.graphics.moveTo( 0, 0 );			bg.graphics.lineTo( stage.stageWidth, 0 );						addChildAt( bg, 0 );		}		public function updateText( title:String, hed:String ):void		{			title_txt.text = title;			hed_txt.text = hed			showFooter( );		}				public function updateYPos( value:Number ):void		{			y = value;		}				private function updateBackground( value:Number ):void		{			bg.width = value;		}								public function showFooter( duration:Number=TWEEN_SPEED ):void		{			TweenLite.to( this, duration, { alpha: 1,  ease: Strong.easeInOut,				onInit: onTweenInitHandler, onInitParams: ["show"],				onComplete: onTweenCompleteHandler, onCompleteParams: ["show"] } );		}				public function hideFooter( duration:Number=TWEEN_SPEED ):void		{			TweenLite.to( this, duration, { alpha: 0, ease: Strong.easeOut,				onInit: onTweenInitHandler, onInitParams: ["hide"], 				onComplete: onTweenCompleteHandler, onCompleteParams: ["hide"] } );					}		/**********************************		 * Timer		 **********************************/		private function initTimer():void		{			timer = new Timer( TIMER_DURATION, 1 );			timer.addEventListener(TimerEvent.TIMER_COMPLETE, onTimerCompleteHandler, false, 0, true );		}				public function startTimer():void		{			timer.start();			}				public function stopTimer():void		{			timer.stop()		}				public function resetTimer():void		{			timer.reset();		}						/**********************************		 * Event		 **********************************/			public function swfSizerHandler( e:SWFSizeEvent ):void		{			//trace( "FooterView::swfSizerHandler:", e.bottomY, e.rightX, e.windowHeight );			browserWindowWidth = e.rightX;			browserWindowBottom = e.windowHeight;						updateYPos( browserWindowBottom - height );			updateBackground( browserWindowWidth );		}				private function onTimerCompleteHandler( e:TimerEvent ):void		{			trace( "FooterView::onTimerCompleteHandler:" );			hideFooter( );		}		private function onTweenInitHandler( string:String ):void		{			if( string == "hide" ) {					hed_txt.visible = false;				title_txt.visible = false;			}		}				private function onTweenCompleteHandler( string:String ):void		{			//trace( 	"FooterView::onTweenCompleteHandler:", string );			if( string == "show" ) {				hed_txt.visible = true;				title_txt.visible = true;			}		}			}}