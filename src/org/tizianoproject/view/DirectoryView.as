package org.tizianoproject.view{	import com.chrisaiv.utils.ShowHideManager;	import com.tis.utils.components.Scrollbar;		import flash.display.MovieClip;	import flash.display.Sprite;	import flash.events.Event;	import flash.geom.Point;		import org.tizianoproject.events.BaseViewEvent;	import org.tizianoproject.model.IModel;	import org.tizianoproject.view.components.article.Scroller;	import org.tizianoproject.view.components.brick.Author;
	public class DirectoryView extends CompositeView	{		private static const DEFAULT_X_POS:Number = 65;		private static const DEFAULT_Y_POS:Number = 71;		private static const DEFAULT_COLUMNS:Number = 3;		private static const DEFAULT_AUTHOR_POS:Point = new Point( 40, 97 );		private static const MARGIN_BOTTOM:Number = 10;		private static const MARGIN_RIGHT:Number = 10;				private var iModel:IModel;		private var author:Author;		public var baseView_mc:BaseView;				private var directoryHolder:MovieClip;		private var scrollBar:Scroller;				public function DirectoryView( m:IModel )		{			iModel = m;						x = DEFAULT_X_POS;			y = DEFAULT_Y_POS;					}				override protected function init():void		{			var students:Array = new Array("Ashna-Shareff-200.jpg", 				"Bewar-Ukh-200.jpg", 				"Dilpak-Adam-200.jpg", 				"Mohamad-Nawzad-200.jpg", 				"Mustafa-Khayat-200.jpg", 				"Nataly-Alan-200.jpg", 				"Rasty-Brimo-200.jpg", 				"Rebin-Fazil-200.jpg", 				"Savina-Dawood-200.jpg", 				"Shareen-Baban-200.jpg", 				"Shivan-Sito-200.jpg", 				"Zana-Abdullah-200.jpg", 				"Sahar-Alani-200.jpg");			initDirectoryHolder();						createTable(  );					}				private function createTable():void		{			var authors:Array = iModel.getAuthorsByType( "Reporter" );			trace( "DirectoryView::createTable:",  authors.length );			var columns:Number = DEFAULT_COLUMNS;			for( var i:Number = 0; i < authors.length; i++ ){				var xx:Number = i%columns;				var yy:Number = Math.floor( i/columns );								author = new Author( );				author.name = "author" + i;				author.loadImage( authors[i].avatar );				author.id = authors[i].id;				author.writeName( authors[i].fullName );				author.writeGrade( authors[i].age );				author.x = xx * (author.width  + MARGIN_RIGHT );				author.y = yy * (author.height + MARGIN_BOTTOM );				ShowHideManager.addContent( directoryHolder, author );			}						//If there are more than 5 features, add a Scroll Bar			if( directoryHolder.numChildren > 9 ) initFeatureScrollBar();		}				private function initDirectoryHolder():void		{			directoryHolder = new MovieClip();			directoryHolder.name = "directoryHolder";			directoryHolder.x = DEFAULT_AUTHOR_POS.x;			directoryHolder.y = DEFAULT_AUTHOR_POS.y;			ShowHideManager.addContent( (this as DirectoryView ), directoryHolder );		}				private function initFeatureScrollBar():void		{			trace( "ArticleView::initFeatureScrollBar:" );			//Create the Features Holder			scrollBar = new Scroller( directoryHolder );			scrollBar.name = "scrollBar";			ShowHideManager.addContent( (this as DirectoryView), scrollBar );		}				/**********************************		 * Event Handlers		 **********************************/		protected function onBaseCloseHandler( e:BaseViewEvent ):void		{			//trace( e.results.name, "::onBaseCloseHandler:" );			dispatchEvent( e );		}					override protected function onAddedToStageHandler( e:Event ):void		{			init();			//Listen to BaseView::close_btn			baseView_mc.addEventListener( BaseViewEvent.CLOSE, onBaseCloseHandler, false, 0, true );					}	}}