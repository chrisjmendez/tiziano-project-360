/******************************************************************************   RadialProgressIndicator.as    Charles S.Davis    March 2009**   radial progress indicator******************************************************************************/package com.dtk{	import flash.display.MovieClip;	import flash.events.Event;		public class RadialLoading extends MovieClip	{		public var largeRadius:Number;		public var smallRadius:Number;		public var petalWidth:Number;		public var petalColor:uint;				private var rAlpha:Number;		private var hAngle:Number;		private var radHAngle:Number;		private var xCoord1:Number;		private var yCoord1:Number;		private var xCoord2:Number;		private var yCoord2:Number;		private var h:uint;				/*		 *   @param			largeRadius     			Number			outside radius of each 'petal'		 *   @param			smallRadius		    		Number			inside radius of each 'petal'		 *   @param			petalWidth					Number			thickness of each petal		 *   @param			petalColor					uint	        petal color		 *		 *   USAGE:  		// create new instance of radial progress indicator and send required parameters		 * 					var rpi:RadialLoading = new RadialLoading( 20, 12, 4, 0xFF7700 );		 *					rpi.x = 40;		 *					rpi.y = 40;		 *					addChild(rpi);		 */		public function RadialLoading( largeRadius:Number, smallRadius:Number, petalWidth:Number, petalColor:uint ):void		{			this.largeRadius = largeRadius;			this.smallRadius = smallRadius;			this.petalWidth  = petalWidth;			this.petalColor  = petalColor;						renderIndicator();		}				private function renderIndicator():void		{			rAlpha = 0;						for (var h:uint = 0; h <= 12; h++)			{				var hAngle:Number = h * 30;				rAlpha +=.07;    			var radHAngle:Number = hAngle * Math.PI/180;    			var xCoord1:Number = Math.cos(radHAngle) * largeRadius;    			var yCoord1:Number = Math.sin(radHAngle) * largeRadius;    			var xCoord2:Number = Math.cos(radHAngle) * smallRadius;    			var yCoord2:Number = Math.sin(radHAngle) * smallRadius;				graphics.lineStyle(petalWidth, petalColor, rAlpha);    			graphics.moveTo(xCoord1, yCoord1);    			graphics.lineTo(xCoord2, yCoord2);			}			addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);		}			private function onEnterFrameHandler(event:Event):void		{			this.rotation += 30;		}	}}