/** ----------------------------------------------------------- * Tiziano Project 360 Main Class   * ----------------------------------------------------------- * Description: Central Nervous System * - --------------------------------------------------------- * Created by: cmendez@tizianoproject.org * Modified by:  * Date Modified: Always * - --------------------------------------------------------- * Copyright ©2010 * - --------------------------------------------------------- * *  *  *  */package {	import caurina.transitions.TweenListObj;		import com.chargedweb.swfsize.SWFSize;	import com.chargedweb.swfsize.SWFSizeEvent;	import com.chrisaiv.utils.ShowHideManager;	import com.greensock.TweenLite;	import com.gskinner.utils.SWFBridgeAS3;		import flash.display.DisplayObject;	import flash.display.Loader;	import flash.display.MovieClip;	import flash.display.Sprite;	import flash.display.Stage;	import flash.display.StageAlign;	import flash.display.StageScaleMode;	import flash.events.ErrorEvent;	import flash.events.Event;	import flash.events.FullScreenEvent;	import flash.events.IOErrorEvent;	import flash.events.SecurityErrorEvent;	import flash.external.ExternalInterface;	import flash.net.URLRequest;	import flash.system.LoaderContext;		import nl.demonsters.debugger.MonsterDebugger;		import org.adm.runtime.ModeCheck;	import org.casalib.util.LoadUtil;	import org.casalib.util.LocationUtil;	import org.tizianoproject.controller.Controller;	import org.tizianoproject.controller.IController;	import org.tizianoproject.events.BaseViewEvent;	import org.tizianoproject.model.IModel;	import org.tizianoproject.model.Model;	import org.tizianoproject.model.vo.Story;	import org.tizianoproject.view.*;	import org.tizianoproject.view.ArticleView;	import org.tizianoproject.view.components.Background;	import org.tizianoproject.view.components.FullScreen;	import org.tizianoproject.view.components.Overlay;
		public class Main extends Sprite	{		private static const SWF_PATH:String = "http://demo.chrisaiv.com/swf/tiziano/wall.swf";		private static const SWF_LOCAL_PATH:String = "wall.swf";		private static const SWF_BRIDGE:String = "swfBridge";		private static const SWF_BRIDGE_ON_SCREEN_RESIZE:String = "onScreenResize";		private static const SWF_BRIDGE_CONNECT:String = "swfBridgeConnect";				private var context:LoaderContext;		private var swfLoader:Loader;				private var swfBridge:SWFBridgeAS3;				private var model:IModel;		private var controller:IController;				//Views		public var wall_mc:WallView;		public var header_mc:HeaderView;		public var footer_mc:FooterView;		public var bg_mc:Background;				private var headerView:HeaderView;		private var footerView:FooterView;		private var compositeView:CompositeView;		private var articleView:ArticleView;		private var wallView:WallView;		private var studentsView:ListingBrickView;		private var mentorsView:ListingBrickView;				//Components		private var bg:Background;				//MonsterDebugger is like Firebug but for Flash		private var monster:MonsterDebugger;		private var swfSizer:SWFSize;		private var randomColor:Number = Math.random() * 0xffffff;		public function Main()		{					//SWF Sizer must go first in order to record the browser			initSwfSizer();						stage.align = StageAlign.TOP_LEFT;			stage.scaleMode = StageScaleMode.NO_SCALE;						//Debugger			monster = new MonsterDebugger( this );			//Model			model = new Model();			//Controller			controller = new Controller( model );			//Views			compositeView = new CompositeView( model, controller );						initSwfBridge();			addEventListener(Event.ADDED_TO_STAGE, onAddedToStageHandler, false, 0, true );		}				/**********************************		 * Initialize		 **********************************/		private function init():void		{			//initStudentsView();			initChrome();			initArticleView();								var online:Boolean = false;			if( online ){				//Determine whether to run locally or from the live server				var path:String = ( LocationUtil.isIde() ) ? SWF_LOCAL_PATH : SWF_PATH;				initWall( SWF_PATH );			} else {				showView( articleView );				}		}				private function initSwfBridge():void		{			//SWF Bridge			swfBridge = new SWFBridgeAS3( SWF_BRIDGE, this )			swfBridge.addEventListener( Event.CONNECT, onConnectHandler );					}				private function initWall( path:String ):void		{			wallView = wall_mc;			swfSizer.addEventListener(SWFSizeEvent.INIT, wallView.swfSizerHandler, false, 0, true );			swfSizer.addEventListener(SWFSizeEvent.RESIZE, wallView.swfSizerHandler );							wallView.loadWall( path );		}				private function initSwfSizer():void		{			swfSizer = SWFSize.getInstance();		}				/**********************************		 * SWFBridge Handlers		 **********************************/		public function onConnectHandler( e:Event ):void		{			swfMessage( "connect" );		}				public function swfMessage( message:String ):void		{			switch( message ){				case "connect":					swfBridge.send( SWF_BRIDGE_CONNECT, "Sent From:", loaderInfo.url.substr(loaderInfo.url.lastIndexOf("/")) );					break;			}		}				public function onPressThumb( param1:*, param2:* ):void		{			trace( "Main::onPressThumb:", param1, param2 );			showView( articleView );		}		public function onRollOverThumb( param1:*, param2:* ):void		{			//trace( "Main::onRollOverThumb:", param1.description, param2 );			footerView.updateText( param1.description, param2 );			footerView.stopTimer();			footerView.showFooter();		}		public function onRollOutThumb( param1:*, param2:* ):void		{			//trace( "Main::onRollOutThumb:", param1.description, param2 );				footerView.updateText( "", "" );			footerView.startTimer();		}		//This indicates that the AS2 wall is connected		public function swfBridgeConnect( param1:String, param2:String ):void		{			trace( "Main::swfBridgeConnect: ", param1, param2 );		}						/**********************************		 * VIews		 **********************************/		private function initChrome():void		{			//HeaderView is already present on the stage			bg 			= bg_mc;			swfSizer.addEventListener(SWFSizeEvent.INIT, bg.swfSizerHandler, false, 0, true );			swfSizer.addEventListener(SWFSizeEvent.RESIZE, bg.swfSizerHandler );										headerView	= header_mc;			swfSizer.addEventListener(SWFSizeEvent.INIT, headerView.swfSizerHandler, false, 0, true );			swfSizer.addEventListener(SWFSizeEvent.RESIZE, headerView.swfSizerHandler );						footerView	= footer_mc;			swfSizer.addEventListener(SWFSizeEvent.INIT, footerView.swfSizerHandler, false, 0, true );			swfSizer.addEventListener(SWFSizeEvent.RESIZE, footerView.swfSizerHandler );		}				private function initArticleView():void		{			var vimeoConsumerKey:String = "dba8f8dd0a80ed66b982ef862f75383d";			var vimeoID:Number = 12618396;						var video:Story = new Story();				video.authorName = "Jon Vidar";				video.title = "Vimeo Video";				video.storyType = "video"				video.vimeoConsumerKey = vimeoConsumerKey;				video.vimeoID = vimeoID;							var path:String = "http://demo.chrisaiv.com/swf/tiziano/360/Iraq-sdawood-noel/soundslider.swf?size=2&format=xml";			var soundslide:Story = new Story();				soundslide.authorName = "Tory Fine";				soundslide.title = "SoundSlide";				soundslide.storyType = "soundslide";				soundslide.path = path;						var text:Story = new Story();				text.authorName = "chris mendez";				text.title = "Text Story";				text.authorType = "student"				text.storyType = "text";				text.content = "Soluta nobis eleifend option congue nihil imperdiet doming id " + 					"quod mazim. Zzril delenit augue duis dolore te feugait nulla facilisi nam liber. Decima et quinta " + 					"decima eodem modo typi qui nunc nobis videntur parum clari fiant sollemnes in. Feugiat nulla facilisis " + 					"at vero eros et accumsan et iusto odio dignissim! Amet consectetuer adipiscing elit sed diam nonummy " + 					"nibh euismod tincidunt ut. Insitam est usus legentis in iis qui facit eorum claritatem Investigationes. " + 					"Eum iriure dolor in hendrerit in vulputate velit esse molestie consequat vel illum dolore. Gothica quam " + 					"nunc putamus parum claram anteposuerit litterarum formas humanitatis per et sans seacula quarta. Soluta " + 					"nobis eleifend option congue nihil imperdiet doming id quod mazim. Zzril delenit augue duis dolore te " + 					"feugait nulla facilisi nam liber. Decima et quinta decima eodem modo typi qui nunc nobis videntur parum " + 					"clari fiant sollemnes in. Feugiat nulla facilisis at vero eros et accumsan et iusto odio dignissim! Amet " + 					"consectetuer adipiscing elit sed diam nonummy nibh euismod tincidunt ut. Insitam est usus legentis in iis " + 					"qui facit eorum claritatem Investigationes. Eum iriure dolor in hendrerit in vulputate velit esse molestie " + 					"consequat vel illum dolore. Gothica quam nunc putamus parum claram anteposuerit litterarum formas humanitatis " + 					"per et sans seacula quarta.";						var flickr:Story = new Story();				flickr.authorName = "Grant Slater";				flickr.authorType = "mentor";				flickr.title = "Flickr Story";				flickr.storyType = "slideshow";				flickr.flickrKey = "4415d421495d5b59d8537c0937fcce38";				flickr.flickrPhotoset = "72157624151203417";							var stories:Array = new Array( text, soundslide, flickr, video )						//Add an Article Page			articleView = new ArticleView( model, controller );			articleView.name = "articleView";			articleView.stories = stories;			articleView.currentIndex = 0;			articleView.loadStory( );			articleView.addEventListener( BaseViewEvent.CLOSE, hideView );			compositeView.add( articleView );			swfSizer.addEventListener(SWFSizeEvent.INIT, articleView.swfSizerHandler, false, 0, true );			swfSizer.addEventListener(SWFSizeEvent.RESIZE, articleView.swfSizerHandler );		}				private function initStudentsView():void		{			studentsView = new ListingBrickView( model, controller );			studentsView.name = "studentsView";			articleView.addEventListener( BaseViewEvent.CLOSE, hideView );			compositeView.add( studentsView );			showView( studentsView );		}						/**********************************		 * Show | Hide		 **********************************/		private function showView( view:DisplayObject ):void		{			ShowHideManager.addContent( (this as Main), view );			footerView.hideFooter( 0.5 );			if( wallView ) wallView.hideWall( );		}				//Generic view hider		private function hideView( e:BaseViewEvent ):void		{			//BaseView.results will pass the name of the view to hide.			//trace( "Main::hideView:", e.results.viewName );			ShowHideManager.removeContent( (this as Main), e.results.viewName );			if( wallView ) wallView.showWall( );		}						/**********************************		 * Event Handlers		 **********************************/		private function onAddedToStageHandler( e:Event ):void		{			init();		}			}}